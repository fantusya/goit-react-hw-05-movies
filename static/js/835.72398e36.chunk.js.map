{"version":3,"file":"static/js/835.72398e36.chunk.js","mappings":"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","sources":["components/Error/CastReviewsError/CastReviewsError.styled.jsx","components/Pending/CastReviewsPending/Pending.jsx","components/Reviews/Reviews.styled.jsx","components/Error/CastReviewsError/Reviews/Error.jsx","components/Reviews/Reviews.jsx","constants/status.js"],"sourcesContent":["import styled from 'styled-components';\nimport { MdReviews } from 'react-icons/md';\nimport { BsPersonSquare } from 'react-icons/bs';\n\nexport const ErrorText = styled.p`\n  text-align: center;\n\n  font-size: ${p => p.theme.fontSizes.ml};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-family: ${p => p.theme.fonts.text};\n  color: ${p => p.theme.colors.accent};\n`;\n\nexport const ErrorCastIcon = styled(BsPersonSquare)`\n  color: ${p => p.theme.colors.accent};\n`;\n\nexport const ErrorReviewsIcon = styled(MdReviews)`\n  color: ${p => p.theme.colors.accent};\n`;\n","import { Box } from 'components/Box/Box';\n\nimport { FallingLines } from 'react-loader-spinner';\n\nconst CastReviewsPending = () => {\n  return (\n    <Box\n      as=\"section\"\n      display=\"flex\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      py={5}\n    >\n      <FallingLines\n        color=\"#FF1493\"\n        width=\"100\"\n        visible={true}\n        ariaLabel=\"falling-lines-loading\"\n      />\n    </Box>\n  );\n};\n\nexport default CastReviewsPending;\n","import styled from 'styled-components';\nimport { BsPersonCircle } from 'react-icons/bs';\n\nexport const AuthorName = styled.p`\n  padding: ${p => p.theme.space[2]}px ${p => p.theme.space[4]}px;\n\n  font-size: ${p => p.theme.fontSizes.mx};\n\n  border: ${p => p.theme.borders.normal} ${p => p.theme.colors.movieTitle};\n  border-radius: ${p => p.theme.radii.normal};\n\n  color: ${p => p.theme.colors.accent};\n  background-color: ${p => p.theme.colors.header};\n`;\n\nexport const PersonIcon = styled(BsPersonCircle)`\n  color: ${p => p.theme.colors.accent};\n`;\n\nexport const TextContainer = styled.div`\n  padding: ${p => p.theme.space[4]}px;\n\n  border-radius: ${p => p.theme.radii.normal};\n\n  background: repeating-linear-gradient(\n      #5b4d4f 1px,\n      transparent 2px,\n      transparent 28px\n    ),\n    repeating-linear-gradient(\n      90deg,\n      #5b4d4f 1px,\n      transparent 2px,\n      transparent 28px\n    );\n`;\n\nexport const ReviewText = styled.p`\n  text-align: justify;\n\n  font-family: ${p => p.theme.fonts.text};\n  font-size: ${p => p.theme.fontSizes.m};\n  line-height: ${p => p.theme.lineHeights.heading};\n  font-style: italic;\n  letter-spacing: ${p => p.theme.letterSpacings.normal};\n\n  color: ${p => p.theme.colors.white};\n`;\n","import { Box } from 'components/Box/Box';\n\nimport { ErrorText, ErrorCastIcon } from '../CastReviewsError.styled';\n\nconst ReviewsError = () => {\n  return (\n    <Box\n      as=\"section\"\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      gridGap={3}\n      py={5}\n    >\n      <ErrorCastIcon size={60} />\n      <ErrorText>No reviews was found!</ErrorText>\n    </Box>\n  );\n};\n\nexport default ReviewsError;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchingReviews } from 'services/moviesApi';\nimport { Box } from 'components/Box/Box';\n\nimport {\n  AuthorName,\n  PersonIcon,\n  TextContainer,\n  ReviewText,\n} from './Reviews.styled';\nimport ReviewsError from 'components/Error/CastReviewsError/Reviews';\nimport CastReviewsPending from 'components/Pending/CastReviewsPending';\nimport { Status } from 'constants/status';\n\nconst Reviews = () => {\n  const [status, setStatus] = useState(Status.IDLE);\n\n  const { movieId } = useParams();\n  //   console.log(movieId);\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    async function setMovieReviews() {\n      setStatus(Status.PENDING);\n\n      try {\n        const reviewsById = await fetchingReviews(movieId);\n        setReviews(reviewsById);\n        // console.log(reviewsById);\n        setStatus(Status.RESOLVED);\n      } catch (error) {\n        setStatus(Status.REJECTED);\n        console.log(error);\n      }\n    }\n    setMovieReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {status === 'pending' && <CastReviewsPending />}\n      {status === 'resolved' && (\n        <Box as=\"section\" px={7} py={5}>\n          <Box as=\"ul\" display=\"inline-flex\" flexDirection=\"column\" gridGap={6}>\n            {reviews.map(({ id, author, content }) => (\n              <li key={id}>\n                <Box display=\"flex\" alignItems=\"center\" gridGap={4} mb={4}>\n                  <PersonIcon size={50} />\n                  <AuthorName>{author}</AuthorName>\n                </Box>\n                <Box\n                  backgroundColor=\"#0e1c3ca3\"\n                  borderRadius=\"normal\"\n                  border=\"normal\"\n                  borderColor=\"border\"\n                >\n                  <TextContainer>\n                    <ReviewText>{content}</ReviewText>\n                  </TextContainer>\n                </Box>\n              </li>\n            ))}\n          </Box>\n        </Box>\n      )}\n      {status === 'rejected' && <ReviewsError />}\n    </>\n  );\n};\n\nexport default Reviews;\n","export const Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n"],"names":["ErrorText","styled","p","theme","fontSizes","ml","fontWeights","bold","fonts","text","colors","accent","ErrorCastIcon","BsPersonSquare","ErrorReviewsIcon","MdReviews","Box","as","display","alignItems","justifyContent","py","color","width","visible","ariaLabel","AuthorName","space","mx","borders","normal","movieTitle","radii","header","PersonIcon","BsPersonCircle","TextContainer","ReviewText","m","lineHeights","heading","letterSpacings","white","flexDirection","gridGap","size","useState","Status","status","setStatus","movieId","useParams","reviews","setReviews","useEffect","fetchingReviews","reviewsById","console","log","setMovieReviews","CastReviewsPending","px","map","id","author","content","mb","backgroundColor","borderRadius","border","borderColor","IDLE","PENDING","RESOLVED","REJECTED"],"sourceRoot":""}