{"version":3,"file":"static/js/308.c2751074.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Error/CastReviewsError/Cast/Error.jsx","components/Cast/Cast.jsx","components/Error/CastReviewsError/CastReviewsError.styled.jsx","components/Pending/CastReviewsPending/Pending.jsx","constants/status.js","constants/urls.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ActorName = styled.span`\n  display: inline-block;\n  padding-left: ${p => p.theme.space[3]}px;\n  padding-right: ${p => p.theme.space[3]}px;\n\n  font-weight: ${p => p.theme.fontWeights.bold};\n\n  border-radius: ${p => p.theme.radii.normal};\n  border: ${p => p.theme.borders.normal} ${p => p.theme.colors.white};\n\n  color: ${p => p.theme.colors.accent};\n  background-color: ${p => p.theme.colors.header};\n`;\n\nexport const Character = styled.span`\n  display: inline-block;\n  text-align: center;\n\n  font-style: italic;\n\n  color: ${p => p.theme.colors.white};\n`;\n","import { Box } from 'components/Box/Box';\nimport { ErrorText, ErrorReviewsIcon } from '../CastReviewsError.styled';\n\nconst CastError = () => {\n  return (\n    <Box\n      as=\"section\"\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      gridGap={3}\n      py={5}\n    >\n      <ErrorReviewsIcon size={60} />\n      <ErrorText>No cast was found!</ErrorText>\n    </Box>\n  );\n};\n\nexport default CastError;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/css';\nimport { Navigation, Keyboard } from 'swiper';\nimport 'swiper/css/navigation';\nimport { BASE_POSTER_URL, FALLBACK_CAST_IMAGE_PATH } from 'constants/urls';\nimport { Box } from 'components/Box/Box';\n\nimport { fetchingCast } from 'services/moviesApi';\n\nimport { ActorName, Character } from './Cast.styled';\nimport CastError from 'components/Error/CastReviewsError/Cast';\nimport CastReviewsPending from 'components/Pending/CastReviewsPending';\nimport { Status } from 'constants/status';\n\nconst Cast = () => {\n  const [status, setStatus] = useState(Status.IDLE);\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  // console.log('FROM CAST', location);\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    async function setMovieCast() {\n      setStatus(Status.PENDING);\n      try {\n        const castById = await fetchingCast(movieId);\n        setCast(castById);\n        setStatus(Status.RESOLVED);\n      } catch (error) {\n        setStatus(Status.REJECTED);\n        console.log(error);\n      }\n    }\n    setMovieCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {status === 'pending' && <CastReviewsPending />}\n      {status === 'resolved' && (\n        <Box as=\"section\" p={4}>\n          <Swiper\n            spaceBetween={15}\n            slidesPerView={7}\n            modules={[Navigation, Keyboard]}\n            navigation\n            keyboard\n          >\n            {cast.map(({ id, name, character, profile_path }) => (\n              <SwiperSlide key={id}>\n                <li>\n                  <img\n                    width=\"200px\"\n                    height=\"300px\"\n                    src={\n                      profile_path\n                        ? BASE_POSTER_URL + profile_path\n                        : FALLBACK_CAST_IMAGE_PATH\n                    }\n                    alt={name}\n                    loading=\"lazy\"\n                  />\n                  <Box\n                    display=\"flex\"\n                    flexDirection=\"column\"\n                    alignItems=\"center\"\n                    gridGap={3}\n                    pt={4}\n                  >\n                    <ActorName>{name}</ActorName>\n                    <Character>{character}</Character>\n                  </Box>\n                </li>\n              </SwiperSlide>\n            ))}\n          </Swiper>\n        </Box>\n      )}\n      {status === 'rejected' && <CastError />}\n    </>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\nimport { MdReviews } from 'react-icons/md';\nimport { BsPersonSquare } from 'react-icons/bs';\n\nexport const ErrorText = styled.p`\n  text-align: center;\n\n  font-size: ${p => p.theme.fontSizes.ml};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-family: ${p => p.theme.fonts.text};\n  color: ${p => p.theme.colors.accent};\n`;\n\nexport const ErrorCastIcon = styled(BsPersonSquare)`\n  color: ${p => p.theme.colors.accent};\n`;\n\nexport const ErrorReviewsIcon = styled(MdReviews)`\n  color: ${p => p.theme.colors.accent};\n`;\n","import { Box } from 'components/Box/Box';\n\nimport { FallingLines } from 'react-loader-spinner';\n\nconst CastReviewsPending = () => {\n  return (\n    <Box\n      as=\"section\"\n      display=\"flex\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      py={5}\n    >\n      <FallingLines\n        color=\"#FF1493\"\n        width=\"100\"\n        visible={true}\n        ariaLabel=\"falling-lines-loading\"\n      />\n    </Box>\n  );\n};\n\nexport default CastReviewsPending;\n","export const Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n","import errorCast from 'images/fallback.jpg';\nimport errorPoster from 'images/posterFallback.jpg';\n\nexport const BASE_POSTER_URL = `https://image.tmdb.org/t/p/w500/`;\n\nexport const FALLBACK_IMAGE_PATH = errorPoster;\n\nexport const FALLBACK_CAST_IMAGE_PATH = errorCast;\n"],"names":["ActorName","styled","p","theme","space","fontWeights","bold","radii","normal","borders","colors","white","accent","header","Character","Box","as","display","flexDirection","alignItems","gridGap","py","size","useState","Status","status","setStatus","movieId","useParams","cast","setCast","useEffect","fetchingCast","castById","console","log","setMovieCast","CastReviewsPending","spaceBetween","slidesPerView","modules","Navigation","Keyboard","navigation","keyboard","map","id","name","character","profile_path","width","height","src","BASE_POSTER_URL","FALLBACK_CAST_IMAGE_PATH","alt","loading","pt","ErrorText","fontSizes","ml","fonts","text","ErrorCastIcon","BsPersonSquare","ErrorReviewsIcon","MdReviews","justifyContent","color","visible","ariaLabel","IDLE","PENDING","RESOLVED","REJECTED","FALLBACK_IMAGE_PATH","errorPoster","errorCast"],"sourceRoot":""}